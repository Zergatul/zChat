bitLength(): use binary search with constants in code

rewrite all bigint private method to use arrays as parameters

passesLucasLehmer

montgomery exponentiation - length = 2, todo

11612579724020579720096642483607607222791 unit.tests.js:244
14388254777437048436135165580393027414747 unit.tests.js:245
24205509307138017191000120748647148164413 


19955005887045854942572011962 unit.tests.js:244
12705246146523293548086188396 unit.tests.js:245
25386454088191633541714942073


128575841439318551932578 unit.tests.js:244
171993107283788939619490 unit.tests.js:245
273656521771211017131291 


139362306204631781758390154642683940508484899 unit.tests.js:244
193135435531181233923316041883599350735324389 unit.tests.js:245
237834066365160996368485758485675244874516431 

BigInt.parse('128575841439318551932578').modPow(BigInt.parse('10010001101011110000111', 2), BigInt.parse('273656521771211017131291')).toString()

BigInt.parse('9376502473237195198606485341824445247871753836').mod(BigInt.parse('273656521771211017131291')).toString()
i = 7